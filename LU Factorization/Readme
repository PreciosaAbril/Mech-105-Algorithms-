LU decomposition with pivotiing
n = number of rows and m = number of columns using the size function to put a value for each variable  
we want the matrix to be a square otherwise nothing will work 
L = eye(n,m) shows the main diagnol of matrix to be one or zeros 
[piv s] = max(abs(U(ii:n,ii)))%find the absoolute max value in the first column of the rows 
s = s+ii-1%then when we find it we change the value of s and we pivot if needed
line 16-33 is just doing the LU decomp as if you would do it by hand but more efficiently 
for d = ii+1:n %lower and upper changes for each upper decomp and lower decomp 
P*A == L*A%check whether or not they are equal to each other in order to make sure the algorithm worked
